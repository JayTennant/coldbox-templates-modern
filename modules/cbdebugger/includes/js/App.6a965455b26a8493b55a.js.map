{"version":3,"sources":["webpack:///./resources/assets/js/App.js"],"names":["$cb","document","ready","window","cbDebuggerUrl","data","appurl","console","log","cbdClearProfilers","addClass","getJSON","error","alert","messages","toString","html","removeClass","cbdRefreshProfilers","get","response","cbdScrollToProfilerReport","scrollTop","offset","top","cbdGetProfilerReport","id","isVisualizer","cbdReloadAllModules","btn","this","find","cbdReloadModule","module","cbdUnloadModule","remove","cbdStartDebuggerMonitor","frequency","cbdRefreshMonitor","setInterval","cbdStopDebuggerMonitor","clearInterval","cbdToggle","divid","slideToggle","cbdOpenWindow","mypage","myname","w","h","features","screen","width","winl","wint","height","settings","win","open","focus","cbdReinitFramework","usingPassword","reinitForm","getElementById","fwreinit","value","prompt","length","submit","cbdShowGroupedQueries","css","slideUp","slideDown","cbdShowTimelineQueries","cbdShowGroupedOrmQueries","cbdShowTimelineOrmQueries","copyToClipboard","elm","body","createTextRange","range","moveToElementText","select","execCommand","getSelection","selection","createRange","selectNodeContents","removeAllRanges","addRange"],"mappings":"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","file":"includes/js/App.6a965455b26a8493b55a.js","sourcesContent":["import $cb from \"jquery\";\n\n$cb( document ).ready( function(){\n\twindow.cbDebuggerUrl = $cb( \"#cbd-debugger\" ).data().appurl;\n\tconsole.log( \"ColdBox Debugger Loaded at \" + window.cbDebuggerUrl );\n} );\n\n/**\n * Send an ajax command to clear the profilers\n */\nwindow.cbdClearProfilers = function(){\n\t$cb( \"#cbd-buttonClearProfilers > svg\" ).addClass( \"cbd-spinner\" );\n\t$cb.getJSON( cbDebuggerUrl + \"cbDebugger/clearProfilers\", ( data ) => {\n\t\tif ( data.error ){\n\t\t\talert( data.messages.toString() );\n\t\t} else {\n\t\t\t$cb( \"#cbd-profilers\" ).html( data.messages.toString() );\n\t\t}\n\t\t$cb( \"#cbd-buttonClearProfilers > svg\" ).removeClass( \"cbd-spinner\" );\n\t\tcbdRefreshProfilers();\n\t} );\n};\n\n/**\n * Send an ajax command to render the profilers\n */\nwindow.cbdRefreshProfilers = function(){\n\t$cb( \"#cbd-buttonRefreshProfilers > svg\" ).addClass( \"cbd-spinner\" );\n\t$cb.get( cbDebuggerUrl + \"cbDebugger/renderProfilers\", ( response ) => {\n\t\t$cb( \"#cbd-buttonRefreshProfilers > svg\" ).removeClass( \"cbd-spinner\" );\n\t\t$cb( \"#cbd-profilers\" ).html( response );\n\t} );\n};\n\n/**\n * Scroll to the top of the profiler report\n */\nwindow.cbdScrollToProfilerReport = function(){\n\t$cb( document ).scrollTop( $cb( \"#cbd-profilers\" ).offset().top - 10 );\n};\n\n/**\n * Send an ajax command to render the profiler report from the visualizer\n * @param {*} id The profiler id to load\n * @param {*} isVisualizer Are we in visualizer mode or not\n */\nwindow.cbdGetProfilerReport = function( id, isVisualizer ){\n\t$cb( \"#cbd-buttonGetProfilerReport-\" + id + \" > svg\" ).addClass( \"cbd-spinner\" );\n\t$cb.get(\n\t\tcbDebuggerUrl + \"cbDebugger/renderProfilerReport\",\n\t\t{ id: id, isVisualizer: isVisualizer || false },\n\t\t( response ) => {\n\t\t\t$cb( \"#cbd-profilers\" ).html( response );\n\t\t\t$cb( \"#cbd-buttonGetProfilerReport-\" + id + \" > svg\" ).removeClass( \"cbd-spinner\" );\n\t\t\tcbdScrollToProfilerReport();\n\t\t}\n\t);\n};\n\n/**\n * Reload all modules\n * @param {*} btn The caller button\n */\nwindow.cbdReloadAllModules = function( btn ){\n\t$cb( this ).find( \"svg\" ).addClass( \"cbd-spinner\" );\n\t$cb.getJSON(\n\t\tcbDebuggerUrl + \"cbDebugger/reloadAllModules\",\n\t\t( data ) => {\n\t\t\tif ( data.error ){\n\t\t\t\talert( data.messages.toString() );\n\t\t\t} else {\n\t\t\t\talert( \"All modules reloaded!\" );\n\t\t\t}\n\t\t\t$cb( this ).find( \"svg\" ).removeClass( \"cbd-spinner\" );\n\t\t}\n\t);\n};\n\n/**\n * Reload a module\n * @param {*} module The module to reload\n * @param {*} btn The caller button\n */\nwindow.cbdReloadModule = function( module, btn ){\n\t$cb( this ).find( \"svg\" ).addClass( \"cbd-spinner\" );\n\t$cb.getJSON(\n\t\tcbDebuggerUrl + \"cbDebugger/reloadModule\",\n\t\t{ module: module },\n\t\t( data ) => {\n\t\t\tif ( data.error ){\n\t\t\t\talert( data.messages.toString() );\n\t\t\t} else {\n\t\t\t\talert( module + \" reloaded!\" );\n\t\t\t}\n\t\t\t$cb( this ).find( \"svg\" ).removeClass( \"cbd-spinner\" );\n\t\t}\n\t);\n};\n\n/**\n * Unload a module\n * @param {*} module The module to reload\n * @param {*} btn The caller button\n */\nwindow.cbdUnloadModule = function( module, btn ){\n\t$cb( this ).find( \"svg\" ).addClass( \"cbd-spinner\" );\n\t$cb.getJSON(\n\t\tcbDebuggerUrl + \"cbDebugger/unloadModule\",\n\t\t{ module: module },\n\t\t( data ) => {\n\t\t\tif ( data.error ){\n\t\t\t\talert( data.messages.toString() );\n\t\t\t} else {\n\t\t\t\talert( module + \" unloaded!\" );\n\t\t\t\t$cb( \"#cbd-modulerow-\" + module ).remove();\n\t\t\t}\n\t\t\t$cb( this ).find( \"svg\" ).removeClass( \"cbd-spinner\" );\n\t\t}\n\t);\n};\n\n/**\n * Activate the request tracker monitor reloading frequency\n * @param {*} frequency The frequency in seconds to refresh\n */\nwindow.cbdStartDebuggerMonitor = function( frequency ){\n\tif ( frequency == 0 ){\n\t\tcbdStopDebuggerMonitor();\n\t\treturn;\n\t}\n\twindow.cbdRefreshMonitor = setInterval( cbdRefreshProfilers, frequency * 1000 );\n\n\t// Start it\n\tconsole.log( \"Started ColdBox Debugger Profiler Refresh using \" + frequency + \" seconds\" );\n};\n\n/**\n * Stop the debugger refresh monitor\n */\nwindow.cbdStopDebuggerMonitor = function(){\n\tif ( \"cbdRefreshMonitor\" in window ){\n\t\tclearInterval( window.cbdRefreshMonitor );\n\t\tconsole.log( \"Stopped ColdBox Debugger Profiler Refresh\" );\n\t}\n};\n\n/****************** MIGRATE BELOW ****************/\n\n/**\n * Toggle on/off debug content views\n * @param {*} divid The div id to toggle on and off\n */\nwindow.cbdToggle = function( divid ){\n\t$cb( \"#\" + divid ).slideToggle();\n};\n\n/**\n * Open a new window\n * @param {*} mypage the target page\n * @param {*} myname the target name\n * @param {*} w width\n * @param {*} h height\n * @param {*} features features to add\n */\nwindow.cbdOpenWindow = function( mypage, myname, w, h, features ) {\n\tif ( screen.width ){\n\t\tvar winl = ( screen.width-w )/2;\n\t\tvar wint = ( screen.height-h )/2;\n\t}\n\telse {\n\t\twinl = 0;wint =0;\n\t}\n\tif ( winl < 0 ) winl = 0;\n\tif ( wint < 0 ) wint = 0;\n\n\tvar settings = \"height=\" + h + \",\";\n\tsettings += \"width=\" + w + \",\";\n\tsettings += \"top=\" + wint + \",\";\n\tsettings += \"left=\" + winl + \",\";\n\tsettings += features;\n\twin = window.open( mypage,myname,settings );\n\twin.window.focus();\n};\n\n/**\n * Reinit ColdBox by submitting the reinit form\n * @param {*} usingPassword Are we using a password or not, if we do we ask the user for it\n */\nwindow.cbdReinitFramework = function( usingPassword ){\n\tvar reinitForm = document.getElementById( \"cbdReinitColdBox\" );\n\tif ( usingPassword ){\n\t\treinitForm.fwreinit.value = prompt( \"Reinit Password?\" );\n\t\tif ( reinitForm.fwreinit.value.length ){\n\t\t\treinitForm.submit();\n\t\t}\n\t} else {\n\t\treinitForm.submit();\n\t}\n};\n\n/**\n * Show group queries and hide timeline queries\n */\nwindow.cbdShowGroupedQueries = function() {\n\t// Watch out for double toggles\n\tif ( $cb( \"#cbdGroupedQueries\" ).css( \"display\" ) == \"block\" ){\n\t\treturn;\n\t}\n\t$cb( \"#cbdButtonGroupedQueries\" ).addClass( \"cbd-selected\" );\n\t$cb( \"#cbdButtonTimelineQueries\" ).removeClass( \"cbd-selected\" );\n\t$cb( \"#cbdTimelineQueries\" ).slideUp();\n\t$cb( \"#cbdGroupedQueries\" ).slideDown();\n};\n\n/**\n * Show timeline queries and hide group queries\n */\nwindow.cbdShowTimelineQueries = function() {\n\t// Watch out for double toggles\n\tif ( $cb( \"#cbdTimelineQueries\" ).css( \"display\" ) == \"block\" ){\n\t\treturn;\n\t}\n\t$cb( \"#cbdButtonTimelineQueries\" ).addClass( \"cbd-selected\" );\n\t$cb( \"#cbdButtonGroupedQueries\" ).removeClass( \"cbd-selected\" );\n\t$cb( \"#cbdTimelineQueries\" ).slideDown();\n\t$cb( \"#cbdGroupedQueries\" ).slideUp();\n};\n\n/**\n * Show group queries and hide timeline queries for orm\n */\nwindow.cbdShowGroupedOrmQueries = function() {\n\t// Watch out for double toggles\n\tif ( $cb( \"#cbdGroupedOrmQueries\" ).css( \"display\" ) == \"block\" ){\n\t\treturn;\n\t}\n\t$cb( \"#cbdButtonGroupedOrmQueries\" ).addClass( \"cbd-selected\" );\n\t$cb( \"#cbdButtonTimelineOrmQueries\" ).removeClass( \"cbd-selected\" );\n\t$cb( \"#cbdTimelineOrmQueries\" ).slideUp();\n\t$cb( \"#cbdGroupedOrmQueries\" ).slideDown();\n};\n\n/**\n * Show timeline queries and hide group queries for orm\n */\nwindow.cbdShowTimelineOrmQueries = function() {\n\t// Watch out for double toggles\n\tif ( $cb( \"#timelineQueries\" ).css( \"display\" ) == \"block\" ){\n\t\treturn;\n\t}\n\t$cb( \"#cbdButtonTimelineOrmQueries\" ).addClass( \"cbd-selected\" );\n\t$cb( \"#cbdButtonGroupedOrmQueries\" ).removeClass( \"cbd-selected\" );\n\t$cb( \"#cbdTimelineOrmQueries\" ).slideDown();\n\t$cb( \"#cbdGroupedOrmQueries\" ).slideUp();\n};\n\n/**\n * Copy a div's code to the clipboard\n * @param {*} id The id of the element's content to copy to the clipboard\n */\nwindow.copyToClipboard = function( id ) {\n\tvar elm = document.getElementById( id );\n\t// for Internet Explorer\n\tif ( document.body.createTextRange ) {\n\t\tvar range = document.body.createTextRange();\n\t\trange.moveToElementText( elm );\n\t\trange.select();\n\t\tdocument.execCommand( \"Copy\" );\n\t} else if ( window.getSelection ) {\n\t\t// other browsers\n\t\tvar selection = window.getSelection();\n\t\tvar range = document.createRange();\n\t\trange.selectNodeContents( elm );\n\t\tselection.removeAllRanges();\n\t\tselection.addRange( range );\n\t\tdocument.execCommand( \"Copy\" );\n\t}\n};"],"sourceRoot":""}